swagger: "2.0"
info:
  description: "The API for interacting with online courses"
  version: "1.0.0"
  title: "Online Courses"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:5000"
basePath: "/v1"
tags:
- name: "user"
  description: "Users who can login, signup, and veiew courses"
- name: "course"
  description: "Each course has 4 sessions, and each session's content is released on a weekly basis"
schemes:
- "http"
paths:
  /courses:
    get:
      tags: 
      - "course"
      summary: "Get all available courses"
      produces:
      - "application/json"
      responses:
        "200":
          description: "success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Course"
  # /courses/{courseId}:
  # /courses/{courseId}/sessions/{sessionNum}:
  # /courses/{courseId}/sections:
  # /courses/{courseId}/sections/{sectionId}:
  # /courses/{courseId}/sections/{sectionId}/enrollment:
  /user/{username}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
  /user/{username}/enrollment/{sectionId}:
    post:
      tags:
      - "user"
      summary: "Get user by user name"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      - name: "sectionId"
        in: "path"
        description: "The id of the section to enroll the user in"
        required: true
        type: "string"
      responses:
        "201":
          description: "successful enrollment"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username or sectionId supplied"
        "404":
          description: "User or Section not found"
definitions:
  Course:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      sessions:
        type: "array"
        items:
          $ref: "#/definitions/Session"
      sections:
        type: "array"
        items:
          $ref: "#/definitions/Section"
    xml:
      name: "Course"
  Session:
    type: "object"
    properties:
      number:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      content:
        type: "string"
    xml:
      name: "Session"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      enrollment:
        type: "array"
        items:
          type: "object"
          properties:
            sectionId: 
              type: "integer"
            courseId:
              type: "integer"
    xml:
      name: "User"
  Section:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      courseId:
        type: "integer"
        format: "int64"
      nickname:
        type: "string"
      startDate:
        type: "string"
        format: "datetime"
      students:
        type: "array"
        items:
          $ref: "#/definitions/User"
    xml:
      name: "Section"